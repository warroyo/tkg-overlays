#@ load("@ytt:overlay", "overlay")
#@ load("@ytt:data", "data")

#@ md0 = overlay.subset({"kind": "AWSMachineTemplate","metadata":{"name": "{}-{}".format(data.values.CLUSTER_NAME,"md-0")}})
#@ md1 = overlay.subset({"kind": "AWSMachineTemplate","metadata":{"name": "{}-{}".format(data.values.CLUSTER_NAME,"md-1")}})
#@ md2 = overlay.subset({"kind": "AWSMachineTemplate","metadata":{"name": "{}-{}".format(data.values.CLUSTER_NAME,"md-2")}})

#@overlay/match by=overlay.subset({"kind":"AWSCluster"})
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSCluster
spec:
#@overlay/match missing_ok=True
#@ if data.values.CLUSTER_TAGS != "":
  #@ tags = data.values.CLUSTER_TAGS.split(",")
  #@overlay/match missing_ok=True
  #@yaml/text-templated-strings
  additionalTags:
  #@ for i in range(len(tags)) :
  #@ tag = tags[i].split("=")
    (@= tag[0] @): #@ tag[1]
  #@ end
#@ end


#@overlay/match by=overlay.or_op(md0,md1,md2),expects="1+"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSMachineTemplate
spec:
  template:
    spec:
    #@overlay/match missing_ok=True
    #@ if data.values.NODE_TAGS != "":
      #@ tags = data.values.NODE_TAGS.split(",")
      #@overlay/match missing_ok=True
      #@yaml/text-templated-strings
      additionalTags:
      #@ for i in range(len(tags)) :
        #@ tag = tags[i].split("=")
        (@= tag[0] @): #@ tag[1]
      #@ end
    #@ end